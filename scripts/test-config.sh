#!/bin/bash
# Script test c·∫•u h√¨nh Odoo

set -e

echo "üß™ Testing Odoo configuration..."

# Ki·ªÉm tra Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t"
    exit 1
fi

# Ki·ªÉm tra Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t"
    exit 1
fi

echo "‚úÖ Docker v√† Docker Compose s·∫µn s√†ng"

# Test Dockerfile
echo "üî® Testing Dockerfile..."
if docker build -t odoo-test .; then
    echo "‚úÖ Dockerfile build th√†nh c√¥ng"
else
    echo "‚ùå Dockerfile build th·∫•t b·∫°i"
    exit 1
fi

# Test Docker Compose
echo "üê≥ Testing Docker Compose..."
if docker-compose config > /dev/null; then
    echo "‚úÖ Docker Compose config h·ª£p l·ªá"
else
    echo "‚ùå Docker Compose config kh√¥ng h·ª£p l·ªá"
    exit 1
fi

# Test requirements
echo "üì¶ Testing requirements..."
if python3 -c "import sys; sys.path.append('.'); import odoo"; then
    echo "‚úÖ Odoo module c√≥ th·ªÉ import"
else
    echo "‚ö†Ô∏è  Odoo module kh√¥ng th·ªÉ import (c√≥ th·ªÉ c·∫ßn c√†i ƒë·∫∑t dependencies)"
fi

# Test configuration files
echo "‚öôÔ∏è  Testing configuration files..."

# Ki·ªÉm tra odoo.conf
if [ -f "config/odoo.conf" ]; then
    echo "‚úÖ config/odoo.conf t·ªìn t·∫°i"
else
    echo "‚ùå config/odoo.conf kh√¥ng t·ªìn t·∫°i"
fi

# Ki·ªÉm tra render.yaml
if [ -f "render.yaml" ]; then
    echo "‚úÖ render.yaml t·ªìn t·∫°i"
else
    echo "‚ùå render.yaml kh√¥ng t·ªìn t·∫°i"
fi

# Ki·ªÉm tra fly.toml
if [ -f "fly.toml" ]; then
    echo "‚úÖ fly.toml t·ªìn t·∫°i"
else
    echo "‚ùå fly.toml kh√¥ng t·ªìn t·∫°i"
fi

# Ki·ªÉm tra env.example
if [ -f "env.example" ]; then
    echo "‚úÖ env.example t·ªìn t·∫°i"
else
    echo "‚ùå env.example kh√¥ng t·ªìn t·∫°i"
fi

echo ""
echo "üéâ Test ho√†n t·∫•t!"
echo ""
echo "üìã C√°c b∆∞·ªõc ti·∫øp theo:"
echo "1. Ch·∫°y: ./scripts/setup.sh"
echo "2. Ch·ªânh s·ª≠a file .env"
echo "3. Ch·∫°y: docker-compose up -d"
echo "4. Truy c·∫≠p: http://localhost:8069"
